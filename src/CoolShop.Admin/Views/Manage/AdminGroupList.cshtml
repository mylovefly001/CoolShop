@{
    Layout = "../_Shared/MainLayer";
    ViewData["title"] = "管理组设置";
    ViewData["sidebar"] = "";
}

<div class="sixteen wide column">
    <div class="ui vertical segment" id="table">
        <table class="ui blue selectable celled table">
            <thead>
                <tr>
                    <th style="width: 75px;">ID</th>
                    <th style="width: 200px;">名称</th>
                    <th style="width: 100px;">菜单</th>
                    <th style="width: 160px;">状态</th>
                    <th style="width: 200px;">添加时间</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                <tr bind-attr="first">
                    <td></td>
                    <td>
                        <div class="ui small fluid input">
                            <input type="text" bind-name="groupName" placeholder="组名称" bind-id="0">
                        </div>
                    </td>
                    <td>
                        <div class="ui image" style="cursor: pointer; height: 16px; width: 16px;">
                            <img src="/Image/setting.png" bind-name="menuPermission" bind-id="0" bind-detail="[]" onclick="return setPermission(this);" alt="">
                        </div>
                    </td>
                    <td>
                        <div class="ui toggle checkbox status" bind-id="0" bind-val="1">
                            <input type="checkbox" bind-name="status" class="hidden">
                            <label>禁/启</label>
                        </div>
                        <script>
                            $(function () {
                                let checkbox = $(".ui.checkbox.status[bind-id='0']");
                                checkbox.checkbox(checkbox.attr("bind-val") == "1" ? "check" : "uncheck");
                            });
                        </script>
                    </td>
                    <td></td>
                    <td>
                        <div class="ui mini buttons">
                            <button class="ui blue button" onclick="return addItem(this);">添加</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<div class="sixteen wide column">
    <div id="tree" class="ui vertical segment" style="position: fixed;display: none;width: 210px;border:solid 1px #DEDEDE; background:#F5F5F5;"></div>
</div>
<script>
    let table = null;
    let menu = null;
    let currentId = 0;
    let childData= @Html.Raw(ViewBag.rsSysMenuList);
    $(function () {
        initTable();
        initMenu();
    });

    function initMenu() {
        menu = new Menu({
            checkType: 2,
            container: $("#tree"),
            layer: layer,
            childData: childData
        });
    }


    function initTable() {
        table = new Table({
            container: $("#table"),
            layer: layer,
            columns: [
                { "fields": "id" },
                {
                    "fields": "", "event": (item) => {
                        let str = `<div class="ui small fluid input">
                                        <input type="text" bind-name="groupName" placeholder="组名称" bind-id="${item.id}" value="${item.name}">
                                    </div>`;
                        return str;
                    }
                },
                {
                    "fields": "", "event": (item) => {
                        let str = `<div class="ui image" style="cursor: pointer; height: 16px; width: 16px;">
                                        <img src="/Image/setting.png" bind-name="menuPermission" bind-id="${item.id}" bind-detail="${item.detail}" onclick="return setPermission(this);" alt="">
                                    </div>`;
                        return str;
                    }
                },
                {
                    "fields": "", "event": (item) => {
                        let str = `<div class="ui toggle checkbox status" bind-id="${item.id}" bind-val="${item.status}">
                                        <input type="checkbox" bind-name="status" class="hidden">
                                        <label>禁/启</label>
                                    </div>`;
                        return str;
                    }
                },
                { "fields": "createdTime" },
                {
                    "fields": "id", "event": (id) => {
                        let str = `<div class="ui mini buttons">
                                        <button class="ui blue button" onclick="return upItem(this);" bind-id="${id}">更新</button>
                                        <div class="or"></div>
                                        <button class="ui button" onclick="return delItem(this);" bind-id="${id}">删除</button>
                                    </div>`;
                        return str;
                    }
                }
            ],
            ajax: {
                url: '@Url.Action("AdminGroupDo", "Manage",new { cmd="list" })',
                type: "GET",
                dataType: "JSON"
            },
            completeEvent: (container) => {
                container.find(".ui.checkbox.status").each(function (i, item) {
                    $(item).checkbox($(item).attr("bind-val") === "1" ? "check" : "uncheck");
                });
            }
        });
    }

    function setPermission(obj) {
        let offset = $(obj).offset();
        $(obj).css({ "position": "relative", "z-index": 1001 });
        currentId = parseInt($(obj).attr("bind-id"));
        let tmp = [];
        try {
            tmp = JSON.parse($(obj).attr("bind-detail"));
        } catch (e) {

        }
        let divMenuTree = $("#tree");
        divMenuTree.css({
            "left": (offset.left - 6) + "px",
            "top": (offset.top - 10) + "px",
            "z-index": 1000
        }).show();
        divMenuTree.find(".checkbox").each((k, item) => {
            let id = parseInt($(item).parent(".node").attr("bind-id"));
            if ($.inArray(id, tmp) >= 0) {
                $(item).checkbox("check");
            } else {
                $(item).checkbox("uncheck");
            }
        });
        $(window).on("mousedown", (event) => {
            if (!(event.target.id === "tree" || $(event.target).parents("#tree").length > 0)) {
                $("img[bind-name='menuPermission']").css({ "position": "relative", "z-index": 0 });
                let tmp = [];
                divMenuTree.hide().find(".checkbox").each(function (k, item) {
                    let id = parseInt($(item).parent(".node").attr("bind-id"));
                    if ($(item).checkbox("is checked")) {
                        tmp.push(id);
                    }
                });
                $("img[bind-id='" + currentId + "']").attr("bind-detail", JSON.stringify(tmp));
                $(window).off("mousedown");
            }
        });
    }

    function ajaxDo(url, param) {
        let loading = layer.load(2);
        $.ajax({
            url: url,
            type: "POST",
            data: param,
            dataType: "JSON",
            success: (rs) => {
                initTable();
            },
            error: (request) => {
                if (Base.isEmpty(request.responseText)) {
                    layer.msg(request.statusText, { icon: 2 });
                } else {
                    layer.msg(request.responseJSON.msg, { icon: 2 });
                }
            },
            complete: (request) => {
                layer.close(loading);
            }
        });
    }

    function addItem(obj) {
        let tr = $(obj).closest("tr");
        let detail = tr.find("img[bind-name='menuPermission']").attr("bind-detail");
        try {
            detail = JSON.stringify(JSON.parse(detail));
        } catch{
            detail = JSON.stringify([]);
        }
        let param = {
            cmd: "add",
            name: tr.find("input[bind-name='groupName']").val(),
            detail: detail,
            status: tr.find(".ui.checkbox").checkbox("is checked") ? 1 : 0
        };
        console.info(param);
        if (Base.isEmpty(param["name"])) {
            layer.msg("管理组名称不得为空！", { icon: 2 });
            return false;
        }
        ajaxDo('@Url.Action("AdminGroupDo", "Manage")', param);
    }

    function upItem(obj) {
        let id = parseInt($(obj).attr("bind-id"));
        let tr = $(obj).closest("tr");
        let detail = tr.find("img[bind-name='menuPermission']").attr("bind-detail");
        try {
            detail = JSON.stringify(JSON.parse(detail));
        } catch{
            detail = JSON.stringify([]);
        }
        let param = {
            id: id,
            cmd: "edit",
            name: tr.find("input[bind-name='groupName']").val(),
            detail: detail,
            status: tr.find(".ui.checkbox").checkbox("is checked") ? 1 : 0
        };
        if (Base.isEmpty(param["name"])) {
            layer.msg("管理组名称不得为空！", { icon: 2 });
            return false;
        }
        ajaxDo('@Url.Action("AdminGroupDo", "Manage")', param);
    }


    function delItem(obj) {
        layer.confirm("确定删除选择的项？", { icon: 3, title: '提示' }, function (confirmAlert) {
            layer.close(confirmAlert);
            ajaxDo('@Url.Action("AdminGroupDo", "Manage")', {
                id: parseInt($(obj).attr("bind-id")),
                cmd: "del"
            });
        });
    }

</script>